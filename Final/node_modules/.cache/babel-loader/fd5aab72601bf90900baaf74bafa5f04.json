{"ast":null,"code":"\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar secp256k1 = require('secp256k1');\n\nexports.secp256k1 = secp256k1;\n\nvar ethjsUtil = require('ethjs-util');\n\nvar BN = require(\"bn.js\");\n\nexports.BN = BN;\n\nvar rlp = require(\"rlp\");\n\nexports.rlp = rlp;\nObject.assign(exports, ethjsUtil);\n/**\n * Constants\n */\n\n__export(require(\"./constants\"));\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n\n\n__export(require(\"./account\"));\n/**\n * Hash functions\n */\n\n\n__export(require(\"./hash\"));\n/**\n * ECDSA signature\n */\n\n\n__export(require(\"./signature\"));\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n\n\n__export(require(\"./bytes\"));\n/**\n * Function for definining properties on an object\n */\n\n\n__export(require(\"./object\"));","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAM,SAAS,GAAG,OAAO,CAAC,WAAD,CAAzB;;AAmBS,OAAA,CAAA,SAAA,GAAA,SAAA;;AAlBT,IAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AACA,IAAA,EAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAOS,OAAA,CAAA,EAAA,GAAA,EAAA;;AANT,IAAA,GAAA,GAAA,OAAA,CAAA,KAAA,CAAA;;AAWS,OAAA,CAAA,GAAA,GAAA,GAAA;AAVT,MAAM,CAAC,MAAP,CAAc,OAAd,EAAuB,SAAvB;AAiBA;;;;AAGA,QAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;AAEA;;;;;AAGA,QAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;AAEA;;;;;AAGA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;AAEA;;;;;AAGA,QAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;AAEA;;;;;AAGA,QAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;AAEA;;;;;AAGA,QAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1 = require('secp256k1');\nexports.secp256k1 = secp256k1;\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\nexports.BN = BN;\nvar rlp = require(\"rlp\");\nexports.rlp = rlp;\nObject.assign(exports, ethjsUtil);\n/**\n * Constants\n */\n__export(require(\"./constants\"));\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n__export(require(\"./account\"));\n/**\n * Hash functions\n */\n__export(require(\"./hash\"));\n/**\n * ECDSA signature\n */\n__export(require(\"./signature\"));\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__export(require(\"./bytes\"));\n/**\n * Function for definining properties on an object\n */\n__export(require(\"./object\"));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}